@model IEnumerable<IdentityRole>
@using Microsoft.AspNetCore.Identity;
@{
    ViewData["Title"] = "Index";
}

<h2> Role Listesi </h2>

<a class="btn btn-primary" asp-area="" asp-controller="AdminRole" asp-action="Create"> Rol Ekle</a>
<br />
<br />
<input id="myInput" type="text" class="search form-control" placeholder="Search..">
<br />

<table id="adminroleindex" class="table table-bordered  table-sm">

    <thead>
        <tr>
            <th>#</th>
            <th onclick="sortTable(1)"><span class="fa fa-sort"></span> Role Adı</th>
          @*  <th onclick="sortTable(2)"><span class="fa fa-sort"></span> KULLANICI</th>*@
            <th> </th>
        </tr>
    </thead>
    <tbody id="mytable">
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="3" class="text-center">
                    No Roles
                </td>
            </tr>
        }
        else
        {
            @foreach (var role in Model)
            {
                <tr>
                    <td>@role.Id </td>
                    <td>@role.Name </td>
              @*      <td identity-role="@role.Id"></td>*@
                    <td align="left">
                        <a style="font-size:12px" class="btn btn-primary" asp-route-id="@role.Id" asp-action="Edit"> DÜZENLE</a>
                        <form asp-route-id="@role.Id" asp-action="Delete" method="post"> </form>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@section scripts{

    <script>
        $("#myInput").on("keyup", function() {
            var value = $(this).val().toLowerCase();
            $("#mytable tr").filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    </script>

    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("adminroleindex");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
}



